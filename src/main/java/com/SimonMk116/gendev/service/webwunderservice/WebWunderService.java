package com.SimonMk116.gendev.service.webwunderservice;

import com.SimonMk116.gendev.dto.SearchRequests;
import com.SimonMk116.gendev.model.InternetOffer;
import com.SimonMk116.gendev.service.webwunderservice.autogenerated.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

@Service
public class WebWunderService {

    private static final Logger logger = LoggerFactory.getLogger(WebWunderService.class);
    private final WebWunderClient webWunderClient;

    @Autowired
    public WebWunderService(WebWunderClient client) {
        this.webWunderClient = client;
    }

    public Collection<InternetOffer> findOffers(String street, String houseNumber, String city, String plz) {
        SearchRequests request = new SearchRequests(street, houseNumber, city, plz);
        Output out = webWunderClient.getInternetOffers(request);

        if (out == null) {
            logger.warn("WebWunderClient returned null output for address: {}, {}, {}, {}", street, houseNumber, city, plz);
            return List.of();
        }

        List<Product> webWunderProducts = out.getProducts();
        if (webWunderProducts == null) {
            logger.warn("WebWunderClient output.getProducts() returned null.");
            return List.of();
        }

        Collection<InternetOffer> internetOffers = new ArrayList<>();

        for (Product product : webWunderProducts) {
            ProductInfo info = product.getProductInfo();

            if (info == null ) {
                logger.warn("Warning: Product without productInfo (productID={})", product.getProductId());
                continue;
            }

            //Init voucher fields
            String voucherType = null;
            Integer percentage = null;
            Integer maxDiscountInCent = null;
            Integer discountInCent = null;
            Integer minOrderValueInCent = null;

            Voucher voucher = info.getVoucher();
            if (voucher instanceof PercentageVoucher pv) {
                voucherType = "PERCENTAGE";
                percentage = pv.getPercentage();
                maxDiscountInCent = pv.getMaxDiscountInCent();
            } else if (voucher instanceof AbsoluteVoucher av) {
                voucherType = "ABSOLUTE";
                discountInCent = av.getDiscountInCent();
                minOrderValueInCent = av.getMinOrderValueInCent();
            }

            //create InternetOffer
            InternetOffer offer = new InternetOffer(
                    String.valueOf(product.getProductId()),
                    product.getProviderName(),
                    product.getProductInfo().getSpeed(),
                    product.getProductInfo().getMonthlyCostInCent(),
                    product.getProductInfo().getMonthlyCostInCentFrom25ThMonth(),
                    product.getProductInfo().getContractDurationInMonths(),
                    product.getProductInfo().getConnectionType().toString(),
                    voucherType,
                    percentage,
                    maxDiscountInCent,
                    discountInCent,
                    minOrderValueInCent
            );

            internetOffers.add(offer);
        }

        return internetOffers;
    }
}